@model TestCapstoneWeb.OneViewTwoTablesModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>OneViewTwoTables</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <fieldset>
        <legend>User Data</legend>
        <p>Enter Data for the new User being created</p>
        <div class="form-group" style="border-width:thick; ">
            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Email for the new User here" } })
                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="border-width:thick; ">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Email for the new User here" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="border-width:thick; ">
            @Html.LabelFor(model => model.PasswordAgain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordAgain, new { htmlAttributes = new { @class = "form-control", placeholder = "Type Email for the new User here" } })
                @Html.ValidationMessageFor(model => model.PasswordAgain, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
        <fieldset>
            <legend>Role Data</legend>
            <p>Select an existing Role for the User from the Dropdown, Or<br />
               Type in a new Role name to be created into the textbox
            </p>
            
        <div class="form-group">
          @Html.Label("Existing Roles",new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleID, (IEnumerable<SelectListItem>)ViewBag.Roles, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Or, New Role Name",new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewRoleName, new { htmlAttributes = new { @class = "form-control", placeholder = "Type role name here to Create it" } })
                @Html.ValidationMessageFor(model => model.NewRoleName, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
        <fieldset>
            <legend>Item Data</legend>
            <p>
                Enter the Data for the new Item to be created for this user
            </p>
            <div class="form-group">
                @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Type description of item being created"  } })
                    @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ItemPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
